{"version":3,"sources":["components/ProductCard.jsx","components/ProductList.jsx","services/api.js","components/ShoppingCartButton.jsx","components/ListCategories.jsx","pages/Home.jsx","pages/ShoppingCart.jsx","components/Ratings.jsx","pages/ProductDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductCard","handleClick","bind","product","this","props","localStorage","setItem","title","thumbnail","price","id","to","pathname","state","data-testid","className","src","alt","type","onClick","React","Component","ProductList","products","map","key","a","fetch","response","json","object","getProductsFromCategoryAndQuery","categoryId","query","url","ShoppingCartButton","ListCategories","categories","getCategories","then","setState","event","console","log","target","value","results","length","name","htmlFor","Home","getQueryValue","onChange","ShoppingCart","productAdd","getItem","renderProduct","Ratings","placeholder","cols","rows","placegolder","ProductDetails","location","attributes","atribute","index","value_name","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5c23563d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './ProductList.css';\n\nclass ProductCard extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { product } = this.props;\n    localStorage.setItem('productAdd', product.title);\n  }\n\n  render() {\n    const { product } = this.props;\n    const { product: { title, thumbnail, price, id } } = this.props;\n    return (\n      <div>\n        <Link\n          to={ {\n            pathname: `/details/${id}`,\n            state: product,\n          } }\n          data-testid=\"product-detail-link\"\n        >\n          <div data-testid=\"product\" className=\"card-list\">\n            <div className=\"card-container\">\n              <h2 className=\"card-title\">{ title }</h2>\n              <img className=\"card-image\" src={ thumbnail } alt={ title } />\n              <p className=\"card-price\">{ price }</p>\n            </div>\n          </div>\n        </Link>\n        <button\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.handleClick }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n      //     </div>\n      // </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n// import { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass ProductList extends React.Component {\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"card-list\">\n        {\n          products.map((product) => (\n            <ProductCard\n              key={ product.id }\n              product={ product }\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nProductList.propTypes = {\n  query: PropTypes.string,\n}.isRequired;\n\nexport default ProductList;\n\n// query 'MLB5672'\n","export async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  // Implemente aqui\n  const response = await fetch(url);\n  const object = await response.json();\n\n  return object;\n}\n\n/* Lógica recomendada pelo Lucio no grupo de Whatsapp, para que a funçao possa ser chamada\ntanto pelo Id, quanto pela query */\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  const url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const response = await fetch(url);\n  const object = await response.json();\n\n  return object;\n}\n","import React from 'react';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCartButton extends React.Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n          <AiOutlineShoppingCart />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCartButton;\n","import React from 'react';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductList from './ProductList';\n// import { getCategories } from './services/api' ;\n\nclass ListCategories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      products: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    getCategories().then((object) => this.setState({\n      categories: [...object],\n    }));\n  }\n\n  handleClick(event) {\n    console.log(event.target.value);\n    getProductsFromCategoryAndQuery(event.target.value).then((object) => {\n      this.setState({\n        products: object.results,\n      });\n    });\n  }\n\n  render() {\n    const { categories, products } = this.state;\n    return (\n      <div>\n        {\n          products.length === 0\n            ? (categories\n              .map(({ id, name }) => (\n                <label htmlFor={ id } key={ id }>\n                  <input\n                    id={ id }\n                    type=\"radio\"\n                    onClick={ this.handleClick }\n                    value={ id }\n                    data-testid=\"category\"\n                  />\n                  { name }\n                  <br />\n                </label>\n              )))\n            : <ProductList products={ products } />\n        }\n      </div>\n    );\n  }\n}\n\nexport default ListCategories;\n","import React from 'react';\nimport ProductList from '../components/ProductList';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ShoppingCartButton from '../components/ShoppingCartButton';\nimport ListCategories from '../components/ListCategories';\n\n// import * as api from './services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      products: [],\n    };\n    this.getQueryValue = this.getQueryValue.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { query } = this.state;\n    getProductsFromCategoryAndQuery(null, query)\n      .then((object) => {\n        this.setState({\n          products: object.results,\n        });\n      });\n  }\n\n  getQueryValue(event) {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n    const { products } = this.state;\n\n    return (\n      <div>\n\n        <input\n          type=\"text\"\n          data-testid=\"query-input\"\n          value={ query }\n          onChange={ this.getQueryValue }\n        />\n\n        <ShoppingCartButton />\n\n        <p\n          data-testid=\"home-initial-message\"\n        >\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n\n        <button\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ this.handleClick }\n        >\n          Buscar\n        </button>\n\n        {\n          products.length === 0\n            ? <p>Nenhum produto foi encontrado</p>\n            : <ProductList products={ products } />\n        }\n\n        {/* { api.getCategories().then((categories) => console.log(categories)  )} */}\n        <ListCategories />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GiReturnArrow } from 'react-icons/gi';\nimport { FaBoxOpen } from 'react-icons/fa';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\n\nclass ShoppingCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      productAdd: localStorage.getItem('productAdd'),\n    };\n\n    this.renderProduct = this.renderProduct.bind(this);\n  }\n\n  renderProduct() {\n    const { productAdd } = this.state;\n    return (\n      <>\n        <p data-testid=\"shopping-cart-product-name\">{ productAdd }</p>\n        <span data-testid=\"shopping-cart-product-quantity\">1</span>\n      </>\n    );\n  }\n\n  render() {\n    const { productAdd } = this.state;\n    return (\n      <div>\n        <Link to=\"/\"><GiReturnArrow /></Link>\n        <p>\n          <AiOutlineShoppingCart />\n          Carrinho de compras\n        </p>\n        <span><FaBoxOpen /></span>\n        {\n          !productAdd\n            ? <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n            : this.renderProduct()\n        }\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\n\nclass Ratings extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     email: '',\n  //     stars: 0,\n  //     message: '',\n  //   };\n  // }\n\n  render() {\n    return (\n      <div>\n        <h3>Avaliações</h3>\n        <form>\n          <label htmlFor=\"email\">\n            <input type=\"text\" id=\"email\" placeholder=\"Email\" />\n          </label>\n          <label htmlFor=\"mensagem\">\n            <textarea\n              data-testid=\"product-detail-evaluation\"\n              name=\"\"\n              id=\"mensagem\"\n              cols=\"30\"\n              rows=\"10\"\n              placegolder=\"Mensagem ()\"\n            />\n          </label>\n          <button type=\"submit\">Avaliar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Ratings;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GiReturnArrow } from 'react-icons/gi';\nimport PropTypes from 'prop-types';\nimport ShoppingCartButton from '../components/ShoppingCartButton';\nimport Ratings from '../components/Ratings';\n\n// import { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { location: { state: { title } } } = this.props;\n    localStorage.setItem('productAdd', title);\n  }\n\n  render() {\n    const { location: { state: { title, thumbnail, price, attributes } } } = this.props;\n    return (\n      <div>\n        <div>\n          <h2 data-testid=\"product-detail-name\">{ title }</h2>\n          <img src={ thumbnail } alt=\"\" />\n          <p>{ price }</p>\n          <ul>\n            {attributes.map((atribute, index) => (\n              <li key={ index }>\n                {atribute.name}\n                {': '}\n                {atribute.value_name}\n              </li>))}\n          </ul>\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ this.handleClick }\n          >\n            Adicionar ao Carrinho\n          </button>\n\n          <ShoppingCartButton />\n\n          <Link to=\"/\"><GiReturnArrow /></Link>\n        </div>\n        <Ratings />\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  map: PropTypes.func,\n}.isRequired;\n\nexport default ProductDetails;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ShoppingCart from './pages/ShoppingCart';\nimport ProductDetails from './pages/ProductDetails';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/cart\" component={ShoppingCart} />\n      <Route path=\"/details/:id\" component={ProductDetails} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}